// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider  = "prisma-client-js"
}

model User {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    email       String
    password    String
    avatar      String
    date        DateTime @default(now())
    profile     Profile? 
    comments    Comment[]
    posts       Post[]
    likes       Like[]
}

model Post {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    userId      String
    user        User     @relation(fields: [userId], references: [id])
    text        String
    comments    Comment[]
    likes       Like[]
    date        DateTime @default(now())
}

model Like {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    postId      String   @db.ObjectId
    post        Post     @relation(fields: [postId], references: [id])
    userId      String   @db.ObjectId
    user        User     @relation(fields: [userId], references: [id])
}

model Comment {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    postId      String   @db.ObjectId
    post        Post     @relation(fields: [postId], references: [id])
    userId       String   @db.ObjectId
    user        User     @relation(fields: [userId], references: [id])
    text        String
    date        DateTime @default(now())
}

model Profile {
    id               String   @id @default(auto()) @map("_id") @db.ObjectId
    userId           String   @db.ObjectId @unique
    user             User     @relation(fields: [userId], references: [id])
    company          String?
    website          String?
    bio              String?
    location         String?
    skills           String[]
    status           String?
    githubUsername   String?
    experience       Experience[]
    education        Education[]
    social           Social?
    date             DateTime @default(now())

}

model Experience {
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    profileId       String
    profile         Profile @relation(fields: [profileId], references: [id])
    title           String
    company         String
    location        String?
    from            DateTime
    to              DateTime?
    current         Boolean @default(false)
    description     String?
}

model Education {
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    profileId       String
    profile         Profile @relation(fields: [profileId], references: [id])
    school          String
    degree          String
    fieldofstudy    String?
    from            String
    to              String?
    current         Boolean @default(false)
    description     String?
}

model Social {
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    profileId       String @db.ObjectId @unique
    profile         Profile @relation(fields: [profileId], references: [id])
    youtube         String?
    twitter         String?
    facebook        String?
    linkedin        String?
    instagram       String?
}